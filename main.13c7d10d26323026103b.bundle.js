(()=>{"use strict";class t{constructor(){this.listHitbox=[]}addHitBox(t){this.listHitbox.push(t)}update(t){}render(t){}check(){for(let t=0;t<this.listHitbox.length;t++)for(let e=t+1;e<this.listHitbox.length;e++)if(this.listHitbox[t].intersects(this.listHitbox[e]))return!0;return!1}}class e{constructor(){this.path_name="assets/images/",this.texture_path=this.path_name,this.map_texture=new Map}static getInstance(){return e.instance||(e.instance=new e),e.instance}addTexture(t){if(this.map_texture.has(t))return;const e=new Image;e.src=this.texture_path+t+".png",this.map_texture.set(t,e)}getTexture(t){let e=this.map_texture.get(t);return e||(e=new Image,e.src=this.texture_path+t+".png",this.map_texture.set(t,e),e)}}class i{constructor(t,e){this._listComponent=[],this._position=t,this._size=e,this._active=!0}AddImage(t){this.image=t}AddComponent(t){if(this._listComponent.find(e=>e.constructor.name===t.constructor.name))throw new Error("co roi");this._listComponent.push(t)}setPosition(t){this._position=t}activePhysic2d(t){const e=this.getComponent("Physic2D");e&&e.setReverse(t)}activeHitbox(t){const e=this.getComponent("HitBox");e&&e.setDeActive(t)}Update(t){if(!this._active)return;const e=this.getComponent("HitBox");e&&e.setPosition(this._position);for(const e of this._listComponent)e.update&&e.update(t)}setSize(t){this._size=t}Render(t){this.image&&t.render(this.image,this.position.x,this.position.y);for(const e of this._listComponent)e.render(t,this.position.x,this.position.y)}getComponent(t){for(const e of this._listComponent)if(e.constructor.name===t)return e;return null}getAnimation(){return this.getComponent("Animation")}getPhysics(){return this.getComponent("Physic2D")}getHitBox(){return this.getComponent("HitBox")}getComponentNames(){return this._listComponent.map(t=>t.constructor.name)}get position(){return this._position}get size(){return this._size}get active(){return this._active}set active(t){this._active=t}}var s;!function(t){t[t.DashboardScene=0]="DashboardScene",t[t.PlayScene=1]="PlayScene",t[t.SettingScene=2]="SettingScene",t[t.HighScoreScene=3]="HighScoreScene",t[t.EndScene=4]="EndScene"}(s||(s={}));class n{constructor(){}pause(){}Init(){}update(t){}exit(){}resume(){}render(t){}}class o{constructor(){}}class r extends o{constructor(t,e,i){super(),this.pos=t,this.width=e,this.height=i,this.active=!0}setPosition(t){this.pos=t}Init(){}update(t){}getPosX(){return this.pos.x}render(t,e,i){}getPosY(){return this.pos.y}getActive(){return this.active}setDeActive(t){this.active=t}getWidth(){return this.width}getHeight(){return this.height}intersects(t){return!!this.active&&!(this.pos.x+this.width<t.getPosX()||this.pos.x>t.getPosX()+t.getWidth()||this.pos.y+this.height<t.getPosY()||this.pos.y>t.getPosY()+t.getHeight())}}class a extends i{constructor(t,e,i=-500){super({x:t,y:e},{width:90,height:15}),this.HitBox=new r({x:t,y:e},90,15),this.AddComponent(this.HitBox),this.isActive=!0,this.jumpForce=i,this.initializePlatform()}getHitBox(){return this.HitBox}initializePlatform(){const t=this.getTextureName();this.AddImage(e.getInstance().getTexture(t))}Update(t){this.isActive&&(this.updatePlatformSpecific(t),super.Update(t))}updatePlatformSpecific(t){}onPlayerLand(t){return this.handlePlayerLanding(),this.jumpForce}handlePlayerLanding(){}resetPosition(t,e){this.position.x=t,this.position.y=e,this.isActive=!0,this.HitBox.setPosition(this.position),this.onReset()}onReset(){}setRandomPosition(t,e){const i=Math.random()*(500-this.size.width),s=t+Math.random()*(e-t);this.resetPosition(i,s)}get isActivePlatform(){return this.isActive}Render(t){this.isActive&&super.Render(t)}}class h{constructor(){this.audioCache=new Map}static getInstance(){return h.instance||(h.instance=new h),h.instance}loadSound(t,e){const i=new Audio(e);i.preload="auto",this.audioCache.set(t,i)}playSound(t,e=1){const i=this.audioCache.get(t);i&&(i.currentTime=0,i.volume=e,i.play().catch(e=>{console.error(`Error playing sound ${t}:`,e)}))}stopSound(t){const e=this.audioCache.get(t);e&&(e.pause(),e.currentTime=0)}}class c extends a{constructor(t,e){super(t,e,-500)}getTextureName(){return"platform"}handlePlayerLanding(){const t=h.getInstance();t.loadSound("jump","assets/images/jump.mp3"),t.playSound("jump",.8)}}class l extends a{constructor(t,e){super(t,e,-1e3),console.log("spring",t,e)}getTextureName(){return"spring"}handlePlayerLanding(){const t=h.getInstance();t.loadSound("jump","assets/images/spring.mp3"),t.playSound("jump",.8)}}class g extends a{constructor(t,i,s=2e3){super(t,i,-500),this.disappearDelay=200,this.disappearTimer=0,this.isTriggered=!1,console.log("invi",t,i),this.respawnTime=s,this.respawnTimer=0,this.originalY=i,this.beforeTexture=e.getInstance().getTexture("before"),this.afterTexture=e.getInstance().getTexture("after")}getTextureName(){return"before"}handlePlayerLanding(){this.isTriggered||this.triggerDisappear();const t=h.getInstance();t.loadSound("jump","assets/images/break.mp3"),t.playSound("jump",.8)}triggerDisappear(){this.isTriggered=!0,this.disappearTimer=this.disappearDelay}Render(t){if(!this.isActive)return;const e=this.isTriggered?this.afterTexture:this.beforeTexture;t.render(e,this.position.x,this.position.y);for(const e of this._listComponent)e.render(t,this.position.x,this.position.y)}breakPlatform(){this.isActive=!1,this.respawnTimer=this.respawnTime,this.isTriggered=!1,this.disappearTimer=0}updatePlatformSpecific(t){this.isTriggered&&this.disappearTimer>0&&this.isActive&&(this.disappearTimer-=1e3*t,this.disappearTimer<=0&&this.breakPlatform()),!this.isActive&&this.respawnTimer>0&&(this.respawnTimer-=1e3*t,this.respawnTimer<=0&&this.respawn())}respawn(){this.isActive=!0,this.isTriggered=!1,this.disappearTimer=0,this.position.y=this.originalY,this.getHitBox().setPosition(this.position)}resetPosition(t,e){super.resetPosition(t,e),this.originalY=e,this.isTriggered=!1,this.disappearTimer=0}onReset(){this.respawnTimer=0,this.isTriggered=!1,this.isActive=!0,this.disappearTimer=0,this.position.y=this.originalY,this.getHitBox().setPosition(this.position)}}class m extends a{constructor(t,e,i=50,s=100){super(t,e,-500),console.log("move",t,e),this.originalX=t,this.moveDirection=1,this.moveSpeed=i,this.moveRange=s}getTextureName(){return"platform"}updatePlatformSpecific(t){this.updateMovement(t)}handlePlayerLanding(){const t=h.getInstance();t.loadSound("jump","assets/images/jump.mp3"),t.playSound("jump",.8)}updateMovement(t){this.position.x+=this.moveSpeed*this.moveDirection*t,this.position.x<=this.originalX-this.moveRange?(this.moveDirection=1,this.position.x=this.originalX-this.moveRange):this.position.x>=this.originalX+this.moveRange&&(this.moveDirection=-1,this.position.x=this.originalX+this.moveRange),this.position.x<0?(this.position.x=0,this.moveDirection=1):this.position.x>400-this.size.width&&(this.position.x=400-this.size.width,this.moveDirection=-1),this.getHitBox().setPosition(this.position)}onReset(){this.originalX=this.position.x,this.moveDirection=1}}class u{static createRandomPlatform(t,e,i=!0){if(console.log("conca",t,e),!i)return new c(t,e);const s=Math.random();return s<.7?new c(t,e):s<.85?new l(t,e):s<.95?new m(t,e):new g(t,e)}}class d{constructor(t,e){this.platformList=[],this.PositionInit=[],this.PositionRecycle=[],this.isDelete=!1,this.PLATFORM_COUNT=10,this.PLATFORM_VERTICAL_SPACING=115,this.PLATFORM_MIN_SPAWN_DISTANCE=90,this.PLATFORM_MAX_SPAWN_DISTANCE=150,this.SCREEN_WIDTH=400,this.player=t,this.collision=e,this.initializePositionArrays(),this.createInitialPlatforms()}initializePositionArrays(){this.PositionInit=[];for(let t=0;t<this.PLATFORM_COUNT;t++)this.PositionInit.push({x:0,y:0})}createInitialPlatforms(){this.platformList=[];for(let t=0;t<this.PLATFORM_COUNT;t++){const e=this.createPlatformAtIndex(t);this.addPlatformToGame(e)}this.highest=this.platformList[9]}createPlatformAtIndex(t){if(0==t)return u.createRandomPlatform(200,600,!1);const e=this.generateRandomX(),i=600+t*-this.PLATFORM_VERTICAL_SPACING;return this.PositionInit[t].x=e,this.PositionInit[t].y=i,u.createRandomPlatform(e,i)}returnPosInit(){return this.PositionInit}generateRandomX(){return Math.random()*this.SCREEN_WIDTH}addPlatformToGame(t){this.collision.addHitBox(t.getHitBox()),this.platformList.push(t)}deletePlatform(){const t=this.platformList.length;this.platformList=this.platformList.filter(t=>!this.isPlatformBelowScreen(t));const e=this.platformList.length;this.isDelete=t>e}update(t){for(const e of this.platformList)e.Update(t)}movePlatformsDown(t){for(const e of this.platformList)e.position.y+=t,e.getHitBox().setPosition(e.position)}isPlatformBelowScreen(t){return t.position.y>900}SpawnPlatform(){if(!this.isDelete)return;const t=this.generateRandomX(),e=900+10*-this.PLATFORM_VERTICAL_SPACING,i=u.createRandomPlatform(t,e);this.addPlatformToGame(i),this.highest=i,this.isDelete=!0}ReturnHighest(){return this.highest}checkPlayerCollision(t){const e=this.player.getHitBox();for(const i of this.platformList)if(i.isActivePlatform&&this.isPlayerLandingOnPlatform(e,i,10))return this.handlePlayerLandingOnPlatform(i,t),!0;return!1}isPlayerLandingOnPlatform(t,e,i){if(!t.intersects(e.getHitBox()))return!1;const s=this.player.getPosition().y+this.player.getSize().height,n=e.position.y;return Math.abs(s-n)<i}handlePlayerLandingOnPlatform(t,e){const i=t.onPlayerLand(this.player);e.setVelocity({x:e.getVelocity().x,y:i})}render(t){for(const e of this.platformList)e.Render(t)}getPlatformCount(){return this.platformList.length}getActivePlatformCount(){return this.platformList.filter(t=>t.isActivePlatform).length}}class p extends i{attachToPlatform(t){this.attachedPlatform=t}constructor(t,e,i,s,n){super({x:t,y:e},{width:s,height:n}),this.HitBox=new r({x:t,y:e},s,n),this.AddComponent(this.HitBox),this.isActive=!0,this.jumpForce=i,this.initializePlatform()}getHitBox(){return this.HitBox}initializePlatform(){const t=this.getTextureName();this.AddImage(e.getInstance().getTexture(t))}getAgetAttachedPlatform(){return this.attachedPlatform}Update(t){this.isActive&&(this.attachedPlatform&&(this.position.x=this.attachedPlatform.position.x,this.position.y=this.attachedPlatform.position.y+this.getVerticalOffset(),this.getHitBox().setPosition(this.position)),this.updatePlatformSpecific(t),super.Update(t))}updatePlatformSpecific(t){}onPlayerLand(t){return this.handlePlayerLanding(),this.jumpForce}handlePlayerLanding(){}resetPosition(t,e){this.position.x=t,this.position.y=e,this.isActive=!0,this.HitBox.setPosition(this.position),this.onReset()}onReset(){}setRandomPositionOnPlatform(t,e){this.resetPosition(t,e)}get isActivePlatform(){return this.isActive}Render(t){this.isActive&&super.Render(t)}}class y extends p{constructor(t,e,i={x:200,y:-1500},s=77,n=100){super(t,e,i,s,n)}getTextureName(){return"ditconme"}getVerticalOffset(){return-100}handlePlayerLanding(){const t=h.getInstance();t.loadSound("jump","assets/images/jetpack.mp3"),t.playSound("jump",.8),setTimeout(()=>{t.stopSound("jump")},1e3)}}class x extends p{constructor(t,e,i={x:200,y:-1e3},s=77,n=32){super(t,e,i,s,n)}getTextureName(){return"dicho"}getVerticalOffset(){return-20}handlePlayerLanding(){const t=h.getInstance();t.loadSound("jump","assets/images/spring.mp3"),t.playSound("jump",.8)}}class P{static createRandomBoost(t,e){return Math.random()<.6?new x(t,e,{x:0,y:-1e3},77,32):new y(t,e,{x:0,y:-1500},77,50)}}class S{constructor(t,e,i){this.boostList=[],this.BASE_BOOST_COUNT=1,this.BASE_BOOST_SPAWN_CHANCE=1,this.player=t,this.collision=e,this.highestNumber=i}createBoostOnPlatform(){if(this.boostList.length<=0){const t=this.highestNumber.position.x,e=this.highestNumber.position.y,i=P.createRandomBoost(t,e);i.attachToPlatform(this.highestNumber),this.addBoostToGame(i)}}addBoostToGame(t){this.collision.addHitBox(t.getHitBox()),this.boostList.push(t)}update(t){for(const e of this.boostList)e.Update(t)}moveBoostsDown(t){for(const e of this.boostList)e.position.y+=t,e.getHitBox().setPosition(e.position)}setHighest(t){this.highestNumber=t}handleBoostRecycling(){this.boostList=this.boostList.filter(t=>!this.isBoostBelowScreen(t))}isBoostBelowScreen(t){return t.position.y>900}checkPlayerCollision(){const t=this.player.getHitBox();for(let e=this.boostList.length-1;e>=0;e--){const i=this.boostList[e];if(i.isActivePlatform&&t.intersects(i.getHitBox()))return this.applyBoostEffect(i),this.boostList.splice(e,1),!0}return!1}applyBoostEffect(t){const e=t.onPlayerLand(this.player),i=this.player.getPhysics();i&&i.setVelocity(e),console.log("Boost collected!",t.constructor.name)}render(t){for(const e of this.boostList)e.Render(t)}reset(){this.boostList=[]}getBoostCount(){return this.boostList.length}getActiveBoostCount(){return this.boostList.filter(t=>t.isActivePlatform).length}}class f extends o{Init(){}constructor(){super(),this.numFrame={x:1,y:1},this.totalFrames=1,this.currentFrame=0,this.frameTime=0,this.clock=0}setFrameTime(t){this.frameTime=t}setNumframe(t){this.numFrame=t,this.updateFrameParams()}updateFrameParams(){this.texture&&this.numFrame&&(this.frameParam={x:Math.floor(this.texture.width/this.numFrame.x),y:Math.floor(this.texture.height/this.numFrame.y)},this.totalFrames=this.numFrame.x*this.numFrame.y)}update(t){this.frameTime>0&&(this.clock+=t,this.clock>=this.frameTime&&(this.currentFrame=(this.currentFrame+1)%this.totalFrames,this.clock-=this.frameTime))}render(t,e,i){if(!this.texture||!this.texture.complete||0===this.texture.naturalWidth)return;const s=this.currentFrame%this.numFrame.x,n=Math.floor(this.currentFrame/this.numFrame.x);t.drawFrame(this.texture,s*this.frameParam.x,n*this.frameParam.y,this.frameParam.x,this.frameParam.y,e,i,this.frameParam.x,this.frameParam.y)}setTexture(t){this.texture=t,this.updateFrameParams(),this.reset()}reset(){this.currentFrame=0,this.clock=0}getCurrentTexture(){return this.texture}}class w extends o{constructor(t,e,i={x:0,y:0},s={x:0,y:0},n=980,o=!0){super(),this.reverseGravity=!1,this.totalTime=0,this.GameObject=e,this.position=t,this.velocity=i,this.acceleration=s,this.gravity=n,this.useGravity=o,this.startY=t.y,this.startX=t.x}Init(){}setReverse(t){this.reverseGravity=t}update(t){this.reverseGravity?(this.velocity.y+=this.gravity*t,this.position.x+=this.velocity.x*t,this.position.y-=this.velocity.y*t):(this.velocity.y+=this.gravity*t,this.position.x+=this.velocity.x*t,this.position.y+=this.velocity.y*t,this.GameObject.setPosition(this.position))}render(){}getVelocity(){return this.velocity}getPosition(){return this.position}setPosition(t){this.position=t}setVelocity(t){this.velocity=t}setAcceleration(t){this.acceleration=t}setGravity(t){this.gravity=t}enableGravity(t){this.useGravity=t}addForce(t){this.velocity.x+=t.x,this.velocity.y+=t.y}}class T{static initialize(t){T.canvas=t,t.addEventListener("mousemove",e=>{const i=t.getBoundingClientRect();T.mouse={x:e.clientX-i.left,y:e.clientY-i.top}}),t.addEventListener("mousedown",()=>{T.mouseDown=!0}),t.addEventListener("mouseup",()=>{T.mouseDown=!1}),window.addEventListener("keydown",t=>{T.keys.add(t.key.toLowerCase())}),window.addEventListener("keyup",t=>{T.keys.delete(t.key.toLowerCase())})}static isKeyDown(t){return T.keys.has(t.toLowerCase())}static getMouse(){return T.mouse}static isMouseDown(){return T.mouseDown}}T.keys=new Set,T.mouse={x:0,y:0},T.mouseDown=!1,T.canvas=null;class v{constructor(t){this.Animation=null,this.SCREEN_WIDTH=400,this.MOVE_SPEED=300,this.Player=t}getAnimation(){return this.Animation||(this.Animation=this.Player.getGameObject().getAnimation()),this.Animation}Init(){this.setJumpTexture()}setJumpTexture(){const t=this.getAnimation();if(!t)return void console.warn("Animation component not available in DoodleJump");const i=this.Player.getIsLeft()?"jump-left":"jump-right";t.setTexture(e.getInstance().getTexture(i)),t.setNumframe({x:1,y:1}),t.setFrameTime(0)}flip(){this.setJumpTexture()}handleInput(){const t=this.Player.getPhysics().getVelocity(),i=this.getAnimation();i&&(T.isKeyDown("ArrowRight")?(this.Player.setLeft(!1),this.Player.getPhysics().setVelocity({x:this.MOVE_SPEED,y:t.y}),i.setTexture(e.getInstance().getTexture("jump-right"))):T.isKeyDown("ArrowLeft")?(this.Player.setLeft(!0),this.Player.getPhysics().setVelocity({x:-this.MOVE_SPEED,y:t.y}),i.setTexture(e.getInstance().getTexture("jump-left"))):(this.Player.getPhysics().setVelocity({x:0,y:t.y}),this.setJumpTexture()))}Update(t){this.updateBoundaries(),this.handleInput(),this.Player.getGameObject().Update(t)}Render(t){this.Player.getGameObject().Render(t)}updateBoundaries(){const t=this.Player.getGameObject().size.width,e=this.Player.getGameObject().position;e.x>this.SCREEN_WIDTH+t?this.Player.setPosition(0,e.y):e.x<-t&&this.Player.setPosition(this.SCREEN_WIDTH,e.y)}}class I{constructor(t){this.Animation=null,this.SIZE={width:40,height:40},this.SCREEN_WIDTH=400,this.Player=t}getAnimation(){return this.Animation||(this.Animation=this.Player.getGameObject().getAnimation()),this.Animation}Init(){this.setLandingTexture()}setLandingTexture(){const t=this.getAnimation();t?(this.Player.getIsLeft()?t.setTexture(e.getInstance().getTexture("touch-left")):t.setTexture(e.getInstance().getTexture("touch-right")),t.setNumframe({x:1,y:1}),t.setFrameTime(0)):console.warn("Animation component not available in DoodleLanding")}handleInput(){const t=this.Player.getPhysics().getVelocity(),i=this.getAnimation();i&&(T.isKeyDown("ArrowRight")?(this.Player.setLeft(!1),this.Player.getPhysics().setVelocity({x:300,y:t.y}),i.setTexture(e.getInstance().getTexture("touch-right")),i.setNumframe({x:1,y:1}),i.setFrameTime(0)):T.isKeyDown("ArrowLeft")?(this.Player.setLeft(!0),this.Player.getPhysics().setVelocity({x:-300,y:t.y}),i.setTexture(e.getInstance().getTexture("touch-left")),i.setNumframe({x:1,y:1}),i.setFrameTime(0)):(this.Player.setLeft(this.Player.getIsLeft()),this.Player.getPhysics().setVelocity({x:0,y:t.y}),this.setLandingTexture()))}Update(t){this.Player.getVelocity().y>-500&&this.Player.changeState(this.Player.getJumpingState()),this.handleInput(),this.updateBoundaries(),this.Player.getGameObject().Update(t),this.Player.getRocket()&&(this.Player.setRocket(!1),this.Player.changeState(this.Player.getRocketState())),this.Player.getLanding()||this.Player.changeState(this.Player.getJumpingState())}flip(){const t=this.getAnimation();if(t)switch(this.Player.getIsLeft()){case!0:t.setTexture(e.getInstance().getTexture("touch-left"));break;case!1:t.setTexture(e.getInstance().getTexture("touch-right"))}}Render(t){this.Player.getGameObject().Render(t)}updateBoundaries(){const t=this.Player.getGameObject().size.width;this.Player.getGameObject().position.x>this.SCREEN_WIDTH+t?this.setPosition(0,this.Player.getGameObject().position.y):this.Player.getGameObject().position.x<-t&&this.setPosition(this.SCREEN_WIDTH,this.Player.getGameObject().position.y)}setPosition(t,e){this.Player.getGameObject().position.x=t,this.Player.getGameObject().position.y=e,this.Player.getPhysics().setPosition({x:t,y:e})}resetPosition(){this.setPosition(200,300),this.Player.getPhysics().setVelocity({x:0,y:0})}}class b{constructor(t){this.Animation=null,this.SCREEN_WIDTH=400,this.animationSetup=!1,this.rocketTimer=0,this.ROCKET_DURATION=1,this.Player=t}getAnimation(){return this.Animation||(this.Animation=this.Player.getGameObject().getAnimation()),this.Animation}Init(){this.setupRocketAnimation(),this.animationSetup=!0,this.rocketTimer=0}setupRocketAnimation(){const t=this.getAnimation();t?(t.setTexture(e.getInstance().getTexture("rocket")),t.setNumframe({x:3,y:3}),t.setFrameTime(.1)):console.warn("Animation component not available in DoodleRocket")}handleInput(){const t=this.Player.getPhysics().getVelocity();T.isKeyDown("ArrowRight")?(this.Player.setLeft(!1),this.Player.getPhysics().setVelocity({x:300,y:t.y}),console.log("Rocket moving right")):T.isKeyDown("ArrowLeft")?(this.Player.setLeft(!0),this.Player.getPhysics().setVelocity({x:-300,y:t.y})):(this.Player.setLeft(this.Player.getIsLeft()),this.Player.getPhysics().setVelocity({x:0,y:t.y}))}Update(t){this.animationSetup||(this.setupRocketAnimation(),this.animationSetup=!0,this.rocketTimer=0),this.Player.getGameObject().activeHitbox(!1),this.rocketTimer+=t,this.updateBoundaries(),this.handleInput(),this.Player.getGameObject().Update(t),this.checkStateTransition()}checkStateTransition(){this.rocketTimer>=this.ROCKET_DURATION&&(this.Player.getGameObject().activeHitbox(!0),this.Player.setRocket(!1),this.animationSetup=!1,this.rocketTimer=0,this.Player.getLanding()?this.Player.changeState(this.Player.getLandingState()):this.Player.changeState(this.Player.getJumpingState()))}Render(t){this.Player.getGameObject().Render(t)}updateBoundaries(){const t=this.Player.getGameObject().size.width;this.Player.getGameObject().position.x>this.SCREEN_WIDTH+t?this.setPosition(0,this.Player.getGameObject().position.y):this.Player.getGameObject().position.x<-t&&this.setPosition(this.SCREEN_WIDTH,this.Player.getGameObject().position.y)}setPosition(t,e){this.Player.getGameObject().position.x=t,this.Player.getGameObject().position.y=e,this.Player.getPhysics().setPosition({x:t,y:e})}resetPosition(){this.setPosition(200,300),this.Player.getPhysics().setVelocity({x:0,y:0})}}class A{constructor(t){this.Animation=null,this.SCREEN_WIDTH=400,this.MOVE_SPEED=300,this.SPRING_VELOCITY_THRESHOLD=-1e3,this.Player=t}getAnimation(){return this.Animation||(this.Animation=this.Player.getGameObject().getAnimation()),this.Animation}Init(){console.log("g"),this.setJumpTexture(),this.Player.setString(!1)}setJumpTexture(){const t=this.getAnimation();if(!t)return void console.warn("Animation component not available in DoodleSpring");const i=this.Player.getIsLeft()?"jump-left":"jump-right";t.setTexture(e.getInstance().getTexture(i)),t.setNumframe({x:1,y:1}),t.setFrameTime(0)}flip(){this.setJumpTexture()}handleInput(){const t=this.Player.getPhysics().getVelocity(),i=this.getAnimation();i&&(T.isKeyDown("ArrowRight")?(this.Player.setLeft(!1),this.Player.getPhysics().setVelocity({x:this.MOVE_SPEED,y:t.y}),i.setTexture(e.getInstance().getTexture("jump-right"))):T.isKeyDown("ArrowLeft")?(this.Player.setLeft(!0),this.Player.getPhysics().setVelocity({x:-this.MOVE_SPEED,y:t.y}),i.setTexture(e.getInstance().getTexture("jump-left"))):(this.Player.getPhysics().setVelocity({x:0,y:t.y}),this.setJumpTexture()))}Update(t){this.Player.getGameObject().activeHitbox(!1),this.updateBoundaries(),this.handleInput(),this.Player.getGameObject().Update(t)}Render(t){this.Player.getGameObject().Render(t)}updateBoundaries(){const t=this.Player.getGameObject().size.width,e=this.Player.getGameObject().position;e.x>this.SCREEN_WIDTH+t?this.Player.setPosition(0,e.y):e.x<-t&&this.Player.setPosition(this.SCREEN_WIDTH,e.y)}}class L{constructor(){this.isLanding=!1,this.isString=!1,this.isRocketActive=!1,this.FIXED_Y=300,this.SIZE={width:40,height:40},this.isLeft=!1,this.gameObject=new i({x:200,y:this.FIXED_Y},this.SIZE),this.Animation=new f,this.HitBox=new r({x:200,y:this.FIXED_Y},this.SIZE.width,this.SIZE.height),this.physics=new w({x:200,y:this.FIXED_Y},this.gameObject),this.gameObject.AddComponent(this.Animation),this.gameObject.AddComponent(this.HitBox),this.gameObject.AddComponent(this.physics),this.JumpingState=new v(this),this.LandingState=new I(this),this.SpringState=new A(this),this.RocketState=new b(this)}Init(){console.log("duma"),this.JumpingState.Init(),this.LandingState.Init(),this.SpringState.Init(),this.current_state=this.JumpingState,console.log("ditme")}changeState(t){this.current_state=t,this.current_state.Init()}update(t){const e=this.getVelocity();e.y>-500?(this.getGameObject().activeHitbox(!0),this.changeState(this.JumpingState)):-500===e.y?this.changeState(this.LandingState):-1500===e.y?(console.log("Switching to SpringState - hello"),this.changeState(this.RocketState)):-1e3===e.y&&this.changeState(this.SpringState),this.current_state.Update(t)}render(t){this.current_state.Render(t)}getIsLeft(){return this.isLeft}getLanding(){return this.isLanding}getString(){return this.isString}getRocket(){return this.isRocketActive}getGameObject(){return this.gameObject}getPhysics(){return this.physics}getHitBox(){return this.HitBox}getPosition(){return this.gameObject.position}getSize(){return this.gameObject.size}getVelocity(){return this.physics.getVelocity()}getJumpingState(){return this.JumpingState}getLandingState(){return this.LandingState}getStringState(){return this.SpringState}getRocketState(){return this.RocketState}setLeft(t){this.isLeft=t}setLanding(t){this.isLanding=t}setString(t){this.isString=t}setRocket(t){this.isRocketActive=t}setPosition(t,e){this.gameObject.position.x=t,this.gameObject.position.y=e,this.physics.setPosition({x:t,y:e})}resetPosition(){this.setPosition(200,300),this.physics.setVelocity({x:0,y:0})}}class R extends i{constructor(t,e){super(e,{width:t.x,height:t.y}),this.wasMouseDownLastFrame=!1,this.cooldownTimer=0,this.isPressed=!1}Init(){}setOnClick(t){this.onClickCallback=t}resetState(){this.wasMouseDownLastFrame=!1,this.isPressed=!1}isMouseInside(t){return t.x>=this.position.x&&t.x<=this.position.x+this.size.width&&t.y>=this.position.y&&t.y<=this.position.y+this.size.height}Update(t){this.cooldownTimer>0&&(this.cooldownTimer-=t);const e=T.getMouse(),i=T.isMouseDown(),s=this.isMouseInside(e);!this.wasMouseDownLastFrame&&i&&s&&this.cooldownTimer<=0&&this.onClickCallback&&(this.onClickCallback(),this.cooldownTimer=.2),this.wasMouseDownLastFrame=i,this.isPressed=i&&s}isButtonPressed(){return this.isPressed}}class C{constructor(){this.currentScene=null,this.sceneMap=new Map}static getInstance(){return C.instance||(C.instance=new C),C.instance}AddScene(t,e){this.sceneMap.set(t,e)}getScene(t){return this.sceneMap.get(t)}changeScene(t){var e;null==this.currentScene||null===(e=this.currentScene)||void 0===e||e.exit(),this.currentScene=t}changeSceneByName(t){const e=this.getScene(t);e?this.changeScene(e):console.warn(`Scene "${t}" not found in sceneMap.`)}getCurrentScene(){return this.currentScene}getCurrentSceneByName(){for(const[t,e]of this.sceneMap.entries())if(e===this.currentScene)return t;return""}}class O extends n{constructor(){super(),this.currentScore=0,this.highScore=0,this.gameOverText="GAME OVER",this.screenWidth=500,this.screenHeight=750,this.loadResources(),this.createButtons()}loadResources(){e.getInstance().addTexture("background"),e.getInstance().addTexture("play"),this.backgroundImage=e.getInstance().getTexture("background")}createButtons(){this.restartButton=new R({x:120,y:40},{x:this.screenWidth/2-60,y:this.screenHeight/2+100}),this.restartButton.setOnClick(()=>this.onRestartClicked()),this.menuButton=new R({x:120,y:40},{x:this.screenWidth/2-60,y:this.screenHeight/2+160}),this.menuButton.setOnClick(()=>this.onMenuClicked())}setScores(t,e){this.currentScore=t,this.highScore=e,this.currentScore>this.highScore&&(this.highScore=this.currentScore,this.saveHighScore())}saveHighScore(){localStorage.setItem("doodleJump_highScore",this.highScore.toString())}loadHighScore(){const t=localStorage.getItem("doodleJump_highScore");return t?parseInt(t):0}Init(){this.highScore=Math.max(this.highScore,this.loadHighScore())}update(t){this.restartButton.Update(t),this.menuButton.Update(t)}render(t){this.backgroundImage&&this.backgroundImage.complete&&t.render(this.backgroundImage,0,0),t.fillRect(0,0,this.screenWidth,this.screenHeight,"rgba(0, 0, 0, 0.7)");const e=this.screenHeight/2-150;t.drawText(this.gameOverText,this.screenWidth/2,e,"48px Arial","center","white");const i=this.screenHeight/2-80;t.drawText(`Score: ${Math.floor(this.currentScore)}`,this.screenWidth/2,i,"32px Arial","center","yellow");const s=this.screenHeight/2-40;t.drawText(`Best: ${Math.floor(this.highScore)}`,this.screenWidth/2,s,"28px Arial","center","orange"),this.renderSimpleButton(t,this.menuButton,"MENU")}renderSimpleButton(t,e,i){const s=e.position,n=e.size;t.fillRect(s.x,s.y,n.width,n.height,"#666666"),t.drawRect(s.x,s.y,n.width,n.height),t.drawText(i,s.x+n.width/2,s.y+n.height/2+6,"16px Arial","center","white")}onRestartClicked(){console.log("Restart game clicked"),C.getInstance().changeSceneByName("PlayScene")}onMenuClicked(){window.location.reload()}pause(){console.log("EndScene paused")}resume(){console.log("EndScene resumed")}exit(){console.log("EndScene exited")}}class B extends n{constructor(){super(),this.currentScore=0,this.highScore=0,this.isGameOver=!1,this.lastBoostSpawnScore=0,this.boostSpawnInterval=200,this.initializeComponents(),this.platformManager=new d(this.player,this.collision),this.boostManager=new S(this.player,this.collision,this.platformManager.ReturnHighest()),this.endScene=new O,this.loadHighScore()}loadHighScore(){const t=localStorage.getItem("doodleJump_highScore");t&&(this.highScore=parseInt(t))}saveHighScore(){localStorage.setItem("doodleJump_highScore",this.highScore.toString())}saveCurrentScore(){localStorage.setItem("doodleJumpCurrentScore",this.currentScore.toString())}initializeComponents(){this.collision=new t,this.player=new L,console.log("hi",this.player.getPosition()),this.background=new i({x:0,y:0},{width:900,height:900})}Init(){this.player.Init(),this.collision.addHitBox(this.player.getHitBox()),this.background.AddImage(e.getInstance().getTexture("background")),this.loadHighScore(),this.boostManager.createBoostOnPlatform()}update(t){this.isGameOver?this.endScene.update(t):(this.handleCollisions(),this.updateGameObjects(t),this.handleCameraFollow(),this.DeleteAndSpawn(),this.player.update(t),this.checkGameOver())}DeleteAndSpawn(){this.platformManager.deletePlatform(),this.platformManager.SpawnPlatform(),this.boostManager.setHighest(this.platformManager.ReturnHighest()),this.boostManager.handleBoostRecycling(),this.boostManager.createBoostOnPlatform()}updateGameObjects(t){this.platformManager.update(t),this.boostManager.update(t)}handleCameraFollow(){const t=this.player.getPosition(),e=this.player.getVelocity();if(t.y<300&&e.y<0){const e=300-t.y;this.platformManager.movePlatformsDown(e),this.boostManager.moveBoostsDown(e),this.player.setPosition(t.x,300),this.updateScore(e)}}updateScore(t){this.currentScore+=t,Math.floor(this.currentScore)>this.highScore&&(this.highScore=Math.floor(this.currentScore))}handleCollisions(){this.platformManager.checkPlayerCollision(this.player.getPhysics()),this.boostManager.checkPlayerCollision()}checkGameOver(){this.player.getPosition().y>700&&this.handleGameOver()}handleGameOver(){this.isGameOver||(this.isGameOver=!0,this.saveHighScore(),this.endScene.setScores(this.currentScore,this.highScore),this.endScene.Init(),console.log("Game Over! Score:",Math.floor(this.currentScore),"High Score:",this.highScore))}exit(){this.resetPlayerState(),this.boostManager.reset(),this.resetGameState()}resetPlayerState(){this.player.resetPosition()}resetGameState(){this.currentScore=0,this.lastBoostSpawnScore=0}render(t){if(this.background.Render(t),this.platformManager.render(t),this.boostManager.render(t),this.player.render(t),!this.isGameOver){const e=`Score: ${Math.floor(this.currentScore)}`;t.drawText(e,250,50,"40px Arial","center","Black")}this.isGameOver&&this.endScene.render(t)}getCurrentScore(){return Math.floor(this.currentScore)}getHighScore(){return this.highScore}getPlatformCount(){return this.platformManager.getPlatformCount()}getActivePlatformCount(){return this.platformManager.getActivePlatformCount()}getBoostCount(){return this.boostManager.getBoostCount()}restartGame(){this.isGameOver=!1,this.currentScore=0,this.lastBoostSpawnScore=0,this.resetPlayerState(),this.boostManager.reset(),this.resetGameState(),this.platformManager=new d(this.player,this.collision),this.boostManager=new S(this.player,this.collision,this.platformManager.ReturnHighest()),console.log("Game restarted!")}}class H{constructor(){this.listGame=[],this.isJump=!1,this.Background=new i({x:0,y:0},{width:900,height:900}),this.Player=new i({x:80,y:480},{width:60,height:60}),this.PlayerHitbox=new r({x:80,y:480},60,60),this.base=new i({x:80,y:540},{width:60,height:20}),this.baseHitbox=new r({x:80,y:540},60,20),this.Player.AddComponent(this.PlayerHitbox),this.base.AddComponent(this.baseHitbox),this.Collision=new t,this.Physic2D=new w({x:80,y:480},this.Player),this.Player.AddComponent(this.Physic2D),this.listGame.push(this.Player),this.listGame.push(this.base)}Init(){this.anim1=new f,this.anim1.setTexture(e.getInstance().getTexture("jump-left")),this.anim1.setNumframe({x:1,y:1}),this.anim1.setFrameTime(0),this.listGame.push(this.Background),this.Player.AddComponent(this.anim1),this.Background.AddImage(e.getInstance().getTexture("loading")),this.Collision.addHitBox(this.PlayerHitbox),this.Collision.addHitBox(this.baseHitbox)}update(t){for(const e of this.listGame)e.Update(t);this.Collision.check()?this.isJump||(this.Physic2D.setVelocity({x:0,y:-500}),this.isJump=!0):this.isJump=!1}render(t){var e;const i=this.Background.image;if(i){const s=t.getCanvas(),n=i.width,o=i.height,r=Math.min(s.width/n,s.height/o),a=n*r,h=o*r,c=(s.width-a)/2,l=(s.height-h)/2;null===(e=s.getContext("2d"))||void 0===e||e.drawImage(i,c,l,a,h)}for(const e of this.listGame)e!==this.Background&&e.Render(t)}}class k extends n{constructor(){super(),this.lastScore=0,this.highScore=0,this.isFirstLoad=!0,this.ListObject=new H,this.ListObject.Init(),this.Butt=new R({x:100,y:50},{x:200,y:300}),this.Butt.setOnClick(()=>{console.log("Button clicked!"),setTimeout(()=>{C.getInstance().changeSceneByName("PlayScene")},100)})}exit(){console.log("Exiting Dashboard Scene")}Init(){this.Butt.AddImage(e.getInstance().getTexture("play")),this.loadScores(),this.isFirstLoad=!1}loadScores(){const t=localStorage.getItem("doodleJump_highScore");t&&(this.highScore=parseInt(t));const e=localStorage.getItem("doodleJumpCurrentScore");e&&(this.lastScore=parseInt(e))}update(t){this.ListObject.update(t),this.Butt.Update(t)}render(t){this.ListObject.render(t),this.Butt.Render(t)}}class _ extends n{constructor(){super(),this.loadingComplete=!1,this.assetsToLoad=[],this.assetsToLoad=["background","play","loading","platform","spring","invi","jump-left","jump-right","touch-left","touch-right","walk_look up","flying","duma","stretch","rocket","stool","concu","dicho","ditconme","chode","space","Default","after","before"]}Init(){this.startLoading()}startLoading(){return t=this,i=void 0,n=function*(){const t=e.getInstance();for(const e of this.assetsToLoad)t.addTexture(e);yield this.delay(600),this.loadingComplete=!0,this.initializeGameScenes(),C.getInstance().changeSceneByName("DashboardScene")},new((s=void 0)||(s=Promise))(function(e,o){function r(t){try{h(n.next(t))}catch(t){o(t)}}function a(t){try{h(n.throw(t))}catch(t){o(t)}}function h(t){var i;t.done?e(t.value):(i=t.value,i instanceof s?i:new s(function(t){t(i)})).then(r,a)}h((n=n.apply(t,i||[])).next())});var t,i,s,n}initializeGameScenes(){const t=C.getInstance(),e=t.getScene("DashboardScene"),i=t.getScene("PlayScene");e&&e.Init(),i&&i.Init()}delay(t){return new Promise(e=>setTimeout(e,t))}render(t){const e=t.getCanvas();t.fillRect(0,0,e.width,e.height,"#FFFFFF"),t.drawText("Loading...",e.width/2,e.height/2,"24px Arial","center","#000000")}exit(){this.loadingComplete=!1}}class D{static bootstrapScenes(){const t=new _,e=new k,i=new B;C.getInstance().AddScene("LoadingScene",t),C.getInstance().AddScene("DashboardScene",e),C.getInstance().AddScene("PlayScene",i),t.Init(),e.Init(),i.Init()}}class E{constructor(){this.initialized=!1,this.canvas=document.createElement("canvas"),this.canvas.width=500,this.canvas.height=750;const t=window.innerWidth,e=window.innerHeight,i=Math.min(t/500,e/750);this.canvas.style.width=500*i+"px",this.canvas.style.height=750*i+"px",this.canvas.style.display="block",this.canvas.style.margin="0 auto",this.canvas.style.position="relative",this.canvas.style.background="#fff",document.body.style.display="flex",document.body.style.justifyContent="center",document.body.style.alignItems="center";const s=this.canvas.getContext("2d");if(!s)throw new Error("cudcnd");this.ctx=s,document.body.appendChild(this.canvas),this.initialized=!0}render(t,e=0,i=0){this.initialized||(this.canvas.width=Math.max(t.width,400),this.canvas.height=Math.max(t.height,400),document.body.appendChild(this.canvas),this.initialized=!0),this.ctx.drawImage(t,e,i)}fillRect(t,e,i,s,n){this.ctx.save(),this.ctx.fillStyle=n,this.ctx.fillRect(t,e,i,s),this.ctx.restore()}drawRect(t,e,i,s){this.ctx.save(),this.ctx.strokeStyle="red",this.ctx.lineWidth=2,this.ctx.strokeRect(t,e,i,s),this.ctx.restore()}drawFrame(t,e,i,s,n,o,r,a,h){this.ctx.drawImage(t,e,i,s,n,o,r,a,h)}drawText(t,e,i,s="20px Arial",n="center",o="black"){this.ctx&&(this.ctx.save(),this.ctx.font=s,this.ctx.textAlign=n,this.ctx.fillStyle=o,this.ctx.fillText(t,e,i),this.ctx.restore())}getCanvas(){return this.canvas}}new class{constructor(){}},(new class{constructor(){this.lastTime=0}Init(){D.bootstrapScenes(),C.getInstance().changeSceneByName("LoadingScene"),this.Renderer=new E,T.initialize(this.Renderer.getCanvas())}Run(){this.Init(),this.lastTime=performance.now();const t=()=>{const e=performance.now(),i=(e-this.lastTime)/1e3;this.lastTime=e,this.Update(i),this.Render(),requestAnimationFrame(t)};requestAnimationFrame(t)}Update(t){var e;null===(e=C.getInstance().getCurrentScene())||void 0===e||e.update(t)}Render(){var t;null===(t=C.getInstance().getCurrentScene())||void 0===t||t.render(this.Renderer)}}).Run()})();